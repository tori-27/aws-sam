AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  diplom-sam-app

  Sample SAM Template for diplom-sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  OrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: shardId
          AttributeType: S
        - AttributeName: orderId
          AttributeType: S
      KeySchema:
        - AttributeName: shardId
          KeyType: HASH
        - AttributeName: orderId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: OrderTable

  GetOrder:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/OrderService
      Handler: handlers.getOrderHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        GetOrder:
          Type: Api
          Properties:
            Path: /order/{id}
            Method: get
      Environment:
        Variables:
          ORDER_TABLE_NAME: OrderTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: OrderTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - handlers.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  ApiGatewayEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/order/{id}"
  GetOrderFunctionArn:
    Description: ARN for GetOrder Lambda Function
    Value: !GetAtt GetOrder.Arn
  OrderTableArn:
    Description: ARN for Order DynamoDB Table
    Value: !GetAtt OrderTable.Arn
